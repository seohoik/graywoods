---
// src/layouts/MarkdownPostLayout.astro
import BaseLayout from "./BaseLayout.astro"; // Ensure path is correct
import { AstroSeo } from "@astrolib/seo"; // Assuming you still use this

const { frontmatter } = Astro.props;

// --- SEO Data ---
const pageTitle = frontmatter.title || "낱말로 쌓은 성성";
const pageDescription = frontmatter.description || "블로그 게시글";
const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
const ogImageURL = frontmatter.heroImage
  ? new URL(frontmatter.heroImage, Astro.site).toString()
  : new URL("/default-og-image.jpg", Astro.site).toString(); // Default OG image

// 설명(description)이 실제로 존재하고, 기본 안내 문구가 아닌 경우에만 true
const shouldShowDescription = frontmatter.description && frontmatter.description.trim() !== "기본 설명을 입력하세요" && frontmatter.description.trim() !== "";

---

<AstroSeo
  title={pageTitle}
  description={pageDescription}
  canonical={canonicalURL}
  openGraph={{
    url: canonicalURL,
    title: pageTitle,
    description: pageDescription,
    images: [
      {
        url: ogImageURL,
        width: 1200,
        height: 630,
        alt: `${pageTitle} - 대표 이미지`,
        type: "image/jpeg",
      },
    ],
    site_name: "낱말로 쌓은 성성",
    type: "article",
    article: {
        publishedTime: frontmatter.pubDate.toISOString(),
        tags: frontmatter.tags || [],
      },
  }}
  twitter={{
    handle: "@gray_woods",
    cardType: "summary_large_image",
  }}
/>

<BaseLayout
  title={pageTitle}
  description={pageDescription}
  canonicalURL={canonicalURL}
  ogImageURL={ogImageURL}
  ogImageAlt={`${pageTitle} - 대표 이미지`}
>
  <section>
    <div class="px-8 py-12 md:px-12 mx-auto lg:pt-24 max-w-7xl lg:px-32">
      <div class="lg:text-center">
        {/* Use heroImage if it exists */}
        {frontmatter.heroImage && (
            <div class="w-full aspect-[16/5] overflow-hidden mb-8">
              <img
                src={frontmatter.heroImage}
                alt={frontmatter.title || '게시글 대표 이미지'}
                class="object-cover object-center w-full h-full"
                loading="lazy"
                onerror="this.style.display='none';"
              />
            </div>
        )}
        <div class="flex flex-col md:flex-row mt-4 justify-between items-center mb-8">
          {/* Display Date */}
          <p class="text-sm text-zinc-500 mb-2 md:mb-0">
            {frontmatter.pubDate.toLocaleDateString('ko-KR', { year: 'numeric', month: 'long', day: 'numeric' })}
          </p>
          {/* Display Tags if they exist */}
          {frontmatter.tags && frontmatter.tags.length > 0 && (
            <div class="flex flex-wrap justify-center md:justify-end gap-2">
              {frontmatter.tags.map((tag) => (
                <span class="inline-block bg-gray-100 text-gray-700 text-xs font-medium px-2.5 py-1 rounded-full">
                  <a href={`/tags/${tag}`} class="hover:text-blue-600">{tag}</a>
                </span>
              ))}
            </div>
          )}
        </div>
        {/* Post Title */}
        <h1 class="text-3xl tracking-tight text-balance mt-12 lg:mt-16 font-semibold font-display text-black md:text-5xl lg:text-6xl">
          {frontmatter.title}
        </h1>
        {/* Post Description - Show only if it exists and is not the placeholder */}
        {shouldShowDescription && (
           <p class="max-w-3xl mt-6 mx-auto text-lg text-zinc-600">
             <em>{frontmatter.description}</em>
           </p>
        )}
      </div>
      {/* Post Content - Apply Iropke Batang font */}
      <div class="mt-12 lg:mt-16 max-w-3xl mx-auto">
        {/* Add 'font-iropke' class here */}
        <article class="prose prose-lg lg:prose-xl prose-neutral max-w-none prose-a:text-blue-600 hover:prose-a:text-blue-800 prose-img:rounded-lg prose-img:shadow-sm prose-headings:font-display prose-headings:font-semibold font-iropke">
          {/* The actual blog post content is rendered here */}
          <slot />
        </article>
      </div>
    </div>
  </section>
</BaseLayout>
